{"version":3,"sources":["image.png","block4.webp","block3.jpg","components/cards/cards.js","api/index.js","components/chart/charts.js","components/countrypicker/country.js","divider.js","Header.js","avoid.js","App.js","index.js"],"names":["module","exports","Info","data","confirmed","recovered","deaths","lastUpdate","className","Grid","container","spacing","justify","item","xs","md","component","Card","cx","styles","card","infected","CardContent","style","backgroundColor","color","padding","Typography","variant","gutterBottom","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","map","date","reportDate","total","fetchCountries","countries","name","Chart","useState","dailyData","setDailyData","useEffect","initialDailyData","fetchMyAPI","barChart","labels","datasets","label","options","legend","display","title","text","lineChart","borderColor","Countries","handleCountryChange","setCountries","fetchAPI","FormControl","width","marginBottom","formControl","InputLabel","id","Select","onChange","e","target","i","key","DividerExampleDivider","Divider","items","header","CardExampleGroupCentered","Group","centered","useStyles","makeStyles","root","minWidth","bullet","margin","transform","fontSize","pos","SimpleCard","classes","src","block3","marginTop","block4","App","state","setState","fetchedData","this","Logo","Header","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f4077711.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";","module.exports = __webpack_public_path__ + \"static/media/block4.64e5e0c8.webp\";","module.exports = __webpack_public_path__ + \"static/media/block3.75e6fad6.jpg\";","import React from 'react';\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\nimport styles from './cards.css';\n\n\n\nconst Info = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n  if (!confirmed) {\n    return '';\n  }\n\n  return (\n    <div className=\"App\">\n        \n      <Grid container spacing={3} justify=\"center\">\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.infected)}>\n        <CardContent style={{backgroundColor:\" #f48a04\",color:\"White\", padding:20}}>\n            <Typography variant=\"h5\" color=\"White\" gutterBottom>\n              Infected\n            </Typography>\n            <Typography variant=\"h4\" component=\"h2\">\n              <CountUp start={0} end={confirmed.value} duration={2.75} separator=\",\" />\n            </Typography>\n            <Typography color=\"White\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            </CardContent>\n        </Grid>\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.recovered)}>\n        <CardContent style={{backgroundColor:\" #02ab02\",color:\"White\", padding:20}}>\n            <Typography variant=\"h5\" color=\"white\" gutterBottom>\n              Recovered\n            </Typography>\n            <Typography variant=\"h4\" component=\"h2\">\n              <CountUp start={0} end={recovered.value} duration={2.75} separator=\",\" />\n            </Typography>\n            <Typography color=\"white\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            \n          </CardContent>\n        </Grid>\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.deaths)}>\n          <CardContent style={{backgroundColor:\" #bf0325\",color:\"White\", padding:20}}>\n            <Typography variant=\"h5\" color=\"white\" gutterBottom>\n              Deaths\n            </Typography>\n            <Typography variant=\"h4\" component=\"h2\">\n              <CountUp start={0} end={deaths.value} duration={2.75} separator=\",\" />\n            </Typography>\n            <Typography color=\"white\" >\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n          </CardContent>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\nexport default Info;","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async (country) => {\n  let changeableUrl = url;\n\n  if (country) {\n    changeableUrl = `${url}/countries/${country}`;\n  }\n\n  try {\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\n\n    return { confirmed, recovered, deaths, lastUpdate };\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const fetchDailyData = async () => {\n  try {\n    const { data } = await axios.get(`${url}/daily`);\n\n    return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const fetchCountries = async () => {\n  try {\n    const { data: { countries } } = await axios.get(`${url}/countries`);\n\n    return countries.map((country) => country.name);\n  } catch (error) {\n    return error;\n  }\n};","import React, { useState, useEffect } from 'react';\nimport { Line, Bar } from 'react-chartjs-2';\n\nimport { fetchDailyData } from '../../api';\n\nimport styles from './charts.css';\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n  const [dailyData, setDailyData] = useState({});\n\n  useEffect(() => {\n    const fetchMyAPI = async () => {\n      const initialDailyData = await fetchDailyData();\n\n      setDailyData(initialDailyData);\n    };\n\n    fetchMyAPI();\n  }, []);\n\n  const barChart = (\n    confirmed ? (\n      <Bar\n        data={{\n          labels: ['Infected', 'Recovered', 'Deaths'],\n          datasets: [\n            {\n              label: 'People',\n              backgroundColor: ['#f48a04', '#02ab02', '#bf0325'],\n              data: [confirmed.value, recovered.value, deaths.value],\n            },\n          ],\n        }}\n        options={{\n          legend: { display: false },\n          title: { display: true, text: `Current state in ${country}` },\n        }}\n      />\n    ) : null\n  );\n\n  const lineChart = (\n    dailyData[0] ? (\n      <Line \n        data={{\n          labels: dailyData.map(({ date }) => date),\n          datasets: [{\n            data: dailyData.map((data) => data.confirmed),\n            label: 'Infected',\n            borderColor: '#f48a04',\n            backgroundColor: 'white',\n            \n          }, \n          {\n            data: dailyData.map((data) => data.deaths),\n            label: 'Deaths',\n            borderColor: '#bf0325',\n            backgroundColor: 'white',\n           \n          },\n          ],\n        }}\n      />\n    ) : null\n  );\n\n  return (\n    <div className={styles.container}>\n      {country ? barChart : lineChart}\n    </div>\n  );\n};\n\nexport default Chart;","import React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\nimport Select from '@material-ui/core/Select';\nimport { fetchCountries } from '../../api';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport styles from './country.css';\nimport Grid from '@material-ui/core/Grid';\n\nconst Countries = ({ handleCountryChange }) => {\n  const [countries, setCountries] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setCountries(await fetchCountries());\n    };\n\n    fetchAPI();\n  }, []);\n\n  return (\n    <Grid container spacing={3}>\n        <Grid item xs={12}>\n    <FormControl style={{width:\"300px\",marginBottom:20}}  variant=\"outlined\" className={styles.formControl}>\n       <InputLabel id=\"demo-simple-select-outlined-label\">Worldwide</InputLabel>\n      <Select label=\"WorldWide\"  onChange={(e) => handleCountryChange(e.target.value)}>\n      <option value=\"\">WorldWide</option>\n        {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n      </Select>\n    </FormControl>\n    </Grid>\n    </Grid>\n\n  );\n};\n\nexport default Countries;","import React from 'react'\nimport { Divider } from 'semantic-ui-react'\n\nconst DividerExampleDivider = () => <Divider />\n\nexport default DividerExampleDivider\n","import React from 'react'\nimport { Card } from 'semantic-ui-react'\n\nconst items = [\n  {\n    header: 'Covid-19 Tracker',\n    \n  },\n\n]\n\nconst CardExampleGroupCentered = () => <Card.Group centered items={items} />\n\nexport default CardExampleGroupCentered\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Grid} from '@material-ui/core';\r\nimport block4 from './block4.webp'\r\nimport block3 from './block3.jpg'\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nexport default function SimpleCard() {\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  return (\r\n    <Grid justify=\"center\" >\r\n    <img src = {block3} style={{width:'90%',marginTop:30}}/>\r\n    <img src = {block4} style={{width:'90%',marginTop:30}}/>\r\n    </Grid>\r\n  );\r\n}\r\n","import React from 'react'\nimport './style.css'\nimport Logo from './image.png'\nimport Cards from './components/cards/cards'\nimport Chart from './components/chart/charts'\nimport Country from './components/countrypicker/country'\nimport Divider from './divider'\nimport { fetchData } from './api'\nimport Header from './Header'\nimport Avoid from './avoid'\nclass App extends React.Component\n{\n  state = {\n    data:{},\n    country: '',\n  }\n\n  async componentDidMount(){\n    const fetchedData = await fetchData();\n    this.setState({data: fetchedData })\n\n  }\n\n  handleCountryChange = async (country) => {\n    const data = await fetchData(country);\n\n    this.setState({ data, country: country });\n  }\n\n  render(){\n    const {data,country} = this.state \n    return (\n      <div className=\"app\">\n        <img src = {Logo} style={{width:400, padding:30, display: 'inline-block'}}/>\n        <Header/>\n        <Cards data= {data}/>\n        <Country handleCountryChange={this.handleCountryChange} />\n        <Chart data={data} country={country} /> \n        \n        <Divider/>\n        <Avoid/>\n       \n      </div>\n      \n    )\n  }\n\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport axios from 'axios';\n\n  \n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}